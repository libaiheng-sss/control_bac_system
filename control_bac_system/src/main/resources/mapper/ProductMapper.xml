<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.control_bac_system.mapper.ProductMapper">

    <insert id="addProduct" parameterType="com.example.control_bac_system.entity.Product">
        insert into product(product_name,product_code,description,create_time,parent_id,price)
            value (
            #{product.productName},
            #{product.productCode},
            #{product.description},
            #{product.createTime},
            #{product.parentId},
            #{product.price}
            )
    </insert>

    <delete id="deleteProduct" parameterType="com.example.control_bac_system.entity.Product">
        update product set status = 2 where id IN (select id from (select a.id from product a,(select @pid := #{product.id}) b where find_in_set(parent_id,@pid) > 0 and @pid := concat(@pid,',',id)
                                                                   union select id from product where id = #{product.id}) c)
    </delete>

    <update id="updateProduct" parameterType="com.example.control_bac_system.entity.Product">
        update product
        <trim prefix="set" suffixOverrides=",">
                    <if test="product.productName != null and product.productName != ''">set product_name = #{product.productName},</if>
                    <if test="product.description != null and product.description != ''"> description = #{product.description},</if>
                    <if test="product.price != null and product.price >= 0>"> product_name = #{product.price},</if>
                </trim>
        where
            id = #{product.id}
    </update>

    <select id="selectProductTotal" resultType="java.lang.Integer">
        select count(1) from product where parent_id = 0
    </select>

    <select id="selectProductByLimit" parameterType="com.example.control_bac_system.entity.PageQuery" resultType="com.example.control_bac_system.entity.Product">
        SELECT
            x.id,
            x.parent_id,
            x.product_name,
            x.product_code,
            x.description,
            x.price,
            DATE_FORMAT( FROM_UNIXTIME( x.create_time / 1000 ), '%Y-%m-%d %H:%i:%s' ) AS createTime,
            IF(y.num>0,1,0) AS hasChildren
        FROM
                ( SELECT * FROM `product` WHERE parent_id = #{pageQuery.id} ) x
                    LEFT JOIN (
                SELECT
                    a.id,
                    COUNT( 1 ) AS num
                FROM
                        ( SELECT * FROM `product` WHERE parent_id = #{pageQuery.id} ) a
                            LEFT JOIN product p ON a.id = p.parent_id
                WHERE
                    p.id IS NOT NULL
                GROUP BY
                    a.id
            ) y ON x.id = y.id

        ORDER BY create_time DESC
        <if test="pageQuery.start > 0 and pageQuery.end > 0">
            limit #{pageQuery.start},#{pageQuery.end}
        </if>

    </select>
</mapper>